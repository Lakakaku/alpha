openapi: 3.0.3
info:
  title: Admin Verification API
  description: API endpoints for admin verification workflow management
  version: 1.0.0

servers:
  - url: http://localhost:3001/api/admin
    description: Development server
  - url: https://api.vocilia.com/api/admin
    description: Production server

security:
  - AdminAuth: []

paths:
  /verification/cycles:
    get:
      summary: List verification cycles
      description: Get all weekly verification cycles with pagination
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/VerificationCycleStatus"
      responses:
        "200":
          description: List of verification cycles
          content:
            application/json:
              schema:
                type: object
                properties:
                  cycles:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationCycle"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "401":
          $ref: "#/components/responses/Unauthorized"

    post:
      summary: Create new verification cycle
      description: Start a new weekly verification cycle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cycle_week:
                  type: string
                  format: date
                  description: Start date of the week (Monday)
              required:
                - cycle_week
      responses:
        "201":
          description: Verification cycle created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationCycle"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /verification/cycles/{cycleId}/prepare:
    post:
      summary: Prepare verification databases
      description: Generate verification databases for all stores in the cycle
      parameters:
        - name: cycleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: Database preparation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_id:
                    type: string
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          description: Cycle already prepared
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /verification/cycles/{cycleId}/databases:
    get:
      summary: List verification databases for cycle
      description: Get all verification databases in a cycle
      parameters:
        - name: cycleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of verification databases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VerificationDatabase"

  /verification/databases/{databaseId}/download/{format}:
    get:
      summary: Download verification database
      description: Get signed URL for verification database file
      parameters:
        - name: databaseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: path
          required: true
          schema:
            type: string
            enum: [csv, excel, json]
      responses:
        "200":
          description: Signed download URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                    format: uri
                  expires_at:
                    type: string
                    format: date-time

  /verification/cycles/{cycleId}/invoices:
    post:
      summary: Generate invoices for cycle
      description: Create payment invoices for all verified feedback
      parameters:
        - name: cycleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: Invoices generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices_created:
                    type: integer
                  total_amount:
                    type: number

  /verification/invoices/{invoiceId}/payment:
    put:
      summary: Update payment status
      description: Mark invoice as paid and trigger feedback delivery
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [paid, disputed, cancelled]
                payment_date:
                  type: string
                  format: date-time
                notes:
                  type: string
              required:
                - status
      responses:
        "200":
          description: Payment status updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInvoice"

components:
  securitySchemes:
    AdminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Admin JWT token from login

  schemas:
    VerificationCycle:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cycle_week:
          type: string
          format: date
        status:
          $ref: "#/components/schemas/VerificationCycleStatus"
        total_stores:
          type: integer
        completed_stores:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    VerificationCycleStatus:
      type: string
      enum:
        - preparing
        - ready
        - distributed
        - collecting
        - processing
        - invoicing
        - completed
        - expired

    VerificationDatabase:
      type: object
      properties:
        id:
          type: string
          format: uuid
        store_id:
          type: string
          format: uuid
        business_id:
          type: string
          format: uuid
        transaction_count:
          type: integer
        status:
          type: string
          enum: [preparing, ready, downloaded, submitted, processed, expired]
        deadline_at:
          type: string
          format: date-time
        verified_count:
          type: integer
        fake_count:
          type: integer
        unverified_count:
          type: integer

    PaymentInvoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
        business_id:
          type: string
          format: uuid
        total_rewards:
          type: number
        admin_fee:
          type: number
        total_amount:
          type: number
        status:
          type: string
          enum: [pending, paid, overdue, disputed, cancelled]
        invoice_date:
          type: string
          format: date
        due_date:
          type: string
          format: date

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
